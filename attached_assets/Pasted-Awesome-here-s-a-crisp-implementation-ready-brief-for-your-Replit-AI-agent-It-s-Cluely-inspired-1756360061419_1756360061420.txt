Awesome — here’s a crisp, implementation-ready brief for your Replit AI agent. It’s “Cluely-inspired” but original, and fits your Flask + Bootstrap stack with a **white background, near-black text, and blue accents**.

---

# Unfollowr Landing UI – Implementation Brief (Cluely-inspired, Original)

## Goals

* Modern, premium feel with **white background**, **near-black text**, **blue primary buttons**.
* Keep everything lightweight: **Flask + Jinja2 + Bootstrap 5 + vanilla JS** (no React).
* Clear storytelling (Hero → How it works → Live preview → Privacy → Roadmap → Footer).
* Performance + accessibility (A11y color contrast AA/AAA where feasible).

---

## 1) Color System (Tokens)

Create CSS variables (root-level), then apply via utility classes or custom classes.

```css
:root{
  --ufr-bg: #ffffff;
  --ufr-text: #111418;        /* near-black */
  --ufr-text-muted: #5c6570;  /* dark gray */
  --ufr-border: #e7ebef;      /* light gray divider */
  --ufr-blue: #2563eb;        /* primary blue */
  --ufr-blue-600: #1e4fd6;    /* hover */
  --ufr-blue-050: #eef3ff;    /* subtle bg tints, badges */
  --ufr-focus: #99c2ff;       /* focus ring */
  --ufr-shadow: 0 8px 24px rgba(17, 20, 24, .08);
}

html, body { background: var(--ufr-bg); color: var(--ufr-text); }
```

> Note: Blue chosen for good contrast on white; feel free to tweak hue slightly to differentiate further.

---

## 2) Typography & Spacing

* **Font:** Inter (Google Fonts).
* **Headings:** 700 weight; **Body:** 400–500.
* **Line-height:** 1.15 (headings) / 1.6 (body).
* **Spacing scale:** 8px base (8 / 12 / 16 / 24 / 32 / 48 / 64).

```html
<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700&display=swap" rel="stylesheet">
<style>
  body { font-family: Inter, system-ui, -apple-system, Segoe UI, Roboto, sans-serif; }
  .display-hero { font-size: clamp(2rem, 5vw, 3.25rem); letter-spacing: -0.02em; }
  .lead-hero { font-size: clamp(1rem, 2vw, 1.25rem); color: var(--ufr-text-muted); }
</style>
```

---

## 3) Buttons & Links

Distinct but simple blue primary.

```css
.btn-ufr {
  display:inline-flex; align-items:center; gap:.5rem;
  border-radius: 12px; padding:.75rem 1.25rem; font-weight:600;
  border:1px solid transparent; box-shadow: none;
  transition: transform .08s ease, box-shadow .2s ease, background .2s ease;
}
.btn-ufr-primary { background: var(--ufr-blue); color: #fff; }
.btn-ufr-primary:hover { background: var(--ufr-blue-600); transform: translateY(-1px); box-shadow: var(--ufr-shadow); }
.btn-ufr-outline { background: #fff; color: var(--ufr-text); border-color: var(--ufr-border); }
.btn-ufr-outline:hover { border-color: var(--ufr-blue); color: var(--ufr-blue); }
a { color: var(--ufr-blue); }
a:hover { color: var(--ufr-blue-600); }
```

---

## 4) Layout Sections (HTML/Jinja Skeleton)

### 4.1 Hero (above the fold)

**Headline, Subhead, CTA, Secondary CTA**. Clean white BG; no heavy gradients.

**Copy**

* **Headline:** “Clean up your following in minutes.”
* **Subhead:** “Upload your Instagram export to see who doesn’t follow you back—fast. Privacy-first, clear results, direct profile links.”
* **Primary CTA:** “Upload files” → `#upload`
* **Secondary CTA:** “How it works” → `#how`

```html
<header class="py-5 py-md-6 border-bottom" style="border-color: var(--ufr-border)">
  <div class="container text-center" style="max-width: 880px;">
    <h1 class="display-hero mb-3">Clean up your following in minutes.</h1>
    <p class="lead-hero mb-4">Upload your Instagram export to see who doesn’t follow you back—fast. Privacy-first, clear results, direct profile links.</p>
    <div class="d-flex gap-3 justify-content-center">
      <a href="#upload" class="btn-ufr btn-ufr-primary">Upload files</a>
      <a href="#how" class="btn-ufr btn-ufr-outline">How it works</a>
    </div>
  </div>
</header>
```

### 4.2 How it Works (3 steps)

Short, visual; icons or simple SVGs.

**Step labels:** Upload → Analyze → Unfollow

```html
<section id="how" class="py-5">
  <div class="container" style="max-width: 980px;">
    <div class="row g-4">
      {% set steps = [
        {'title':'Upload','desc':'Add your followers and following files (JSON/HTML).'},
        {'title':'Analyze','desc':'We compare sets and sort non-followers alphabetically.'},
        {'title':'Unfollow','desc':'Open profiles directly to tidy up your list.'}
      ] %}
      {% for s in steps %}
      <div class="col-12 col-md-4">
        <div class="p-4 rounded-4 border h-100" style="border-color:var(--ufr-border); background:#fff;">
          <h3 class="h5 mb-2">{{ s.title }}</h3>
          <p class="mb-0" style="color:var(--ufr-text-muted)">{{ s.desc }}</p>
        </div>
      </div>
      {% endfor %}
    </div>
  </div>
</section>
```

### 4.3 Upload Card (prominent)

Styled inputs, filename preview, instant validation.

```html
<section id="upload" class="py-5">
  <div class="container" style="max-width: 880px;">
    <div class="p-4 p-md-5 rounded-4 border" style="border-color:var(--ufr-border); background:#fff; box-shadow:var(--ufr-shadow);">
      <h2 class="h3 mb-3">Upload your export</h2>
      <p class="mb-4" style="color:var(--ufr-text-muted)">We don’t store your files. Processing is session-based and ephemeral.</p>
      <form action="/compare" method="POST" enctype="multipart/form-data" class="row g-3">
        <div class="col-12 col-md-6">
          <label class="form-label">Followers file (JSON/HTML)</label>
          <input class="form-control" type="file" name="followers" accept=".json,.html,.htm">
        </div>
        <div class="col-12 col-md-6">
          <label class="form-label">Following file (JSON/HTML)</label>
          <input class="form-control" type="file" name="following" accept=".json,.html,.htm">
        </div>
        <div class="col-12 d-flex gap-3">
          <button class="btn-ufr btn-ufr-primary" type="submit">Analyze non-followers</button>
          <span class="align-self-center small" style="color:var(--ufr-text-muted)">Max 50MB per file</span>
        </div>
      </form>
    </div>
  </div>
</section>
```

### 4.4 Live Preview (cards + table toggle)

* Keep **white background**, thin borders, soft shadows.
* Sticky **A–Z quick jump** inside the results container only.

```html
<section id="results" class="py-5">
  <div class="container" style="max-width: 1100px;">
    <div class="d-flex justify-content-between align-items-center mb-3">
      <h2 class="h3 mb-0">Non-followers</h2>
      <div class="d-flex gap-2">
        <button class="btn-ufr btn-ufr-outline" id="toggleView">Table view</button>
        <button class="btn-ufr btn-ufr-primary" id="unfollowSelected">Unfollow selected</button>
      </div>
    </div>

    <!-- Sticky A–Z only for the list container -->
    <div class="position-sticky top-0 py-2 bg-white border-bottom mb-3" style="border-color:var(--ufr-border)" id="azBar">
      <!-- Render letters A–Z; disable ones with no entries -->
      <div class="d-flex flex-wrap gap-2 small">
        {% for L in letters %}
          <a href="#group-{{L}}" class="text-decoration-none {% if not has_group[L] %}disabled opacity-50{% endif %}">{{ L }}</a>
        {% endfor %}
      </div>
    </div>

    <!-- Scrollable results container ONLY here (no slider on metrics above) -->
    <div id="resultsContainer" style="max-height: 70vh; overflow:auto; scroll-behavior:smooth; border:1px solid var(--ufr-border);" class="rounded-4 p-3">
      {% for letter, users in groups.items() %}
        <h3 id="group-{{letter}}" class="h6 text-uppercase mt-4 mb-2" style="color:var(--ufr-text-muted)">{{ letter }}</h3>
        <div class="row g-3">
          {% for u in users %}
          <div class="col-12 col-sm-6 col-md-4 col-lg-3">
            <div class="p-3 rounded-3 border h-100 d-flex align-items-start justify-content-between" style="border-color:var(--ufr-border); background:#fff;">
              <div>
                <div class="fw-semibold">{{ u }}</div>
                <a class="small" target="_blank" rel="noopener" href="https://instagram.com/{{ u }}">Open profile</a>
              </div>
              <div class="form-check m-0">
                <input class="form-check-input user-checkbox" type="checkbox" value="{{ u }}" aria-label="Select {{ u }}">
              </div>
            </div>
          </div>
          {% endfor %}
        </div>
      {% endfor %}
    </div>
  </div>
</section>
```

### 4.5 Privacy & Roadmap

Short, high-trust sections.

```html
<section class="py-5 border-top" style="border-color:var(--ufr-border)">
  <div class="container" style="max-width: 880px;">
    <div class="row g-4">
      <div class="col-12 col-md-6">
        <div class="p-4 rounded-4 border h-100" style="border-color:var(--ufr-border); background:#fff;">
          <h3 class="h5 mb-2">Privacy first</h3>
          <ul class="mb-0" style="color:var(--ufr-text-muted)">
            <li>No account login required</li>
            <li>Files processed per-session; not stored</li>
            <li>Secure uploads with size and type validation</li>
          </ul>
        </div>
      </div>
      <div class="col-12 col-md-6">
        <div class="p-4 rounded-4 border h-100" style="border-color:var(--ufr-border); background:#fff;">
          <h3 class="h5 mb-2">What’s next</h3>
          <ul class="mb-0" style="color:var(--ufr-text-muted)">
            <li>Twitter & TikTok exports</li>
            <li>Saved sessions & diffs</li>
            <li>CSV export of results</li>
          </ul>
        </div>
      </div>
    </div>
  </div>
</section>
```

### 4.6 Footer

Slim, high-contrast links; no heavy visuals.

```html
<footer class="py-4 border-top" style="border-color:var(--ufr-border)">
  <div class="container d-flex flex-wrap justify-content-between align-items-center gap-3">
    <span class="small" style="color:var(--ufr-text-muted)">© {{ current_year }} Unfollowr</span>
    <div class="d-flex gap-3 small">
      <a href="/privacy">Privacy</a>
      <a href="/terms">Terms</a>
      <a href="mailto:hello@unfollowr.app">Contact</a>
    </div>
  </div>
</footer>
```

---

## 5) JS Enhancements

### 5.1 Reveal on Scroll (subtle, original)

```js
const io = new IntersectionObserver(entries => {
  for (const e of entries) if (e.isIntersecting) e.target.classList.add('is-visible');
},{ threshold: .12 });

document.querySelectorAll('.reveal').forEach(el => {
  el.classList.add('reveal'); io.observe(el);
});
```

```css
.reveal { opacity: 0; transform: translateY(12px); transition: opacity .45s ease, transform .45s ease; }
.reveal.is-visible { opacity: 1; transform: none; }
```

Apply `class="reveal"` to sections/cards you want to fade in.

### 5.2 Table/Grid Toggle

```js
const toggleBtn = document.getElementById('toggleView');
const cards = document.getElementById('resultsContainer');     // cards live here
const table = document.getElementById('tableView');            // optional table container (render server-side)

toggleBtn?.addEventListener('click', () => {
  cards.classList.toggle('d-none');
  table?.classList.toggle('d-none');
  toggleBtn.textContent = table?.classList.contains('d-none') ? 'Table view' : 'Grid view';
});
```

### 5.3 Batch “Unfollow Selected” (open all)

Fix: iterate over **all** checked checkboxes and open profiles in separate tabs. (Browsers may block too many; add a warning if > X.)

```js
document.getElementById('unfollowSelected')?.addEventListener('click', () => {
  const boxes = [...document.querySelectorAll('.user-checkbox:checked')];
  if (!boxes.length) return alert('Select at least one profile.');
  if (boxes.length > 10 && !confirm(`Open ${boxes.length} tabs?`)) return;

  // Open sequentially with slight delay to reduce popup blocking
  let i = 0;
  const openNext = () => {
    const u = boxes[i++].value;
    window.open(`https://instagram.com/${encodeURIComponent(u)}`, '_blank', 'noopener');
    if (i < boxes.length) setTimeout(openNext, 120);
  };
  openNext();
});
```

---

## 6) Accessibility & UX Rules

* Maintain **min contrast**: text vs. background ≥ 4.5:1 where possible.
* Focus states: add an obvious focus ring:

```css
:focus-visible { outline: 3px solid var(--ufr-focus); outline-offset: 2px; }
```

* Disable A–Z letters with no content: add `.disabled` + `aria-disabled="true"`, `tabindex="-1"`.

---

## 7) Differentiation Checklist (from Cluely)

* Use **your own** blue palette and spacing rhythm (done).
* No identical gradients, icons, section ordering, or copy.
* Keep motion subtle; avoid 1:1 scroll story patterns.
* White BG + near-black type is fine (common), but ensure **layout, spacing, and components** are clearly Unfollowr.

---

## 8) Acceptance Criteria

* [ ] Hero with headline, subhead, primary/secondary CTAs, white background.
* [ ] Upload card with styled inputs, file type hints, and size note.
* [ ] “How it works” section with 3 concise steps.
* [ ] Results area with **sticky A–Z** inside the scrollable container only (no extra page scrollbar next to metrics).
* [ ] Grid cards with checkbox + “Open profile” link; optional table view toggle.
* [ ] Batch “Unfollow selected” opens all selected profiles (with >10 confirmation and staggered opens).
* [ ] Privacy + Roadmap sections in bordered cards on white.
* [ ] Slim footer with links.
* [ ] Color tokens applied; Inter font loaded; consistent spacing; hover/focus states implemented.
* [ ] Lighthouse a11y score ≥ 90 on desktop.

---

If you want, I can also supply a minimal `.css` file consolidating the above tokens + utilities, or a Jinja partial for the A–Z bar and grouped lists.
